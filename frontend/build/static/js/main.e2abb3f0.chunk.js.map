{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstriketask","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","editin","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","type","placeholder","onChange","map","index","key","onClick","style","flex","padding","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e2abb3f0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttodoList: [],\n\t\t\tactiveItem: {\n\t\t\t\tid: null,\n\t\t\t\ttitle: '',\n\t\t\t\tcompleted: false\n\t\t\t},\n\t\t\tediting: false\n\t\t};\n\t\tthis.fetchTasks = this.fetchTasks.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.getCookie = this.getCookie.bind(this);\n\t\tthis.startEdit = this.startEdit.bind(this);\n\t\tthis.deleteItem = this.deleteItem.bind(this);\n\t\tthis.strikeUnstriketask = this.strikeUnstriketask.bind(this);\n\t}\n\tgetCookie(name) {\n\t\tvar cookieValue = null;\n\t\tif (document.cookie && document.cookie !== '') {\n\t\t\tvar cookies = document.cookie.split(';');\n\t\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\t\tvar cookie = cookies[i].trim();\n\t\t\t\t// Does this cookie string begin with the name we want?\n\t\t\t\tif (cookie.substring(0, name.length + 1) === name + '=') {\n\t\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cookieValue;\n\t}\n\tcomponentWillMount() {\n\t\tthis.fetchTasks();\n\t}\n\tfetchTasks() {\n\t\tconsole.log('Fetching ... ');\n\t\tfetch('http://localhost:8000/api/task-list/').then((response) => response.json()).then((data) =>\n\t\t\tthis.setState({\n\t\t\t\ttodoList: data\n\t\t\t})\n\t\t);\n\t}\n\thandleChange(e) {\n\t\tvar name = e.target.name;\n\t\tvar value = e.target.value;\n\t\tconsole.log('name', name);\n\t\tconsole.log('value:', value);\n\n\t\tthis.setState({\n\t\t\tactiveItem: {\n\t\t\t\t...this.state.activeItem,\n\t\t\t\ttitle: value\n\t\t\t}\n\t\t});\n\t}\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('ITEM:', this.state.activeItem);\n\n\t\tvar csrftoken = this.getCookie('csrftoken');\n\n\t\tvar url = 'http://localhost:8000/api/task-create/';\n\n\t\tif (this.state.editing == true) {\n\t\t\turl = `http://localhost:8000/api/task-update/${this.state.activeItem.id}/`;\n\t\t\tthis.setState({\n\t\t\t\teditin: false\n\t\t\t});\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'X-CSRFToken': csrftoken\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.state.activeItem)\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.fetchTasks();\n\t\t\t\tthis.setState({\n\t\t\t\t\tactiveItem: {\n\t\t\t\t\t\tid: null,\n\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\tcompleted: false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log('ERROR:', error);\n\t\t\t});\n\t}\n\tstartEdit(task) {\n\t\tthis.setState({\n\t\t\tactiveItem: task,\n\t\t\tediting: true\n\t\t});\n\t}\n\tdeleteItem(task) {\n\t\tvar csrftoken = this.getCookie('csrftoken');\n\n\t\tfetch(`http://localhost:8000/api/task-delete/${task.id}/`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'X-CSRFToken': csrftoken\n\t\t\t}\n\t\t}).then((response) => this.fetchTasks());\n\t}\n\tstrikeUnstriketask(task) {\n\t\ttask.completed = !task.completed;\n\t\tconsole.log('task', task.completed);\n\t\tvar csrftoken = this.getCookie('csrftoken');\n\n\t\tvar url = `http://localhost:8000/api/task-update/${task.id}/`;\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'X-CSRFToken': csrftoken\n\t\t\t},\n\t\t\tbody: JSON.stringify({ completed: task.completed, title: task.title })\n\t\t}).then(() => {\n\t\t\tthis.fetchTasks();\n\t\t});\n\t}\n\trender() {\n\t\tvar tasks = this.state.todoList;\n\t\tvar self = this;\n\t\treturn (\n\t\t\t<div className=\"page-content page-container\" id=\"page-content\">\n\t\t\t\t<div className=\"padding\">\n\t\t\t\t\t<div className=\"row container d-flex justify-content-center\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t<div className=\"card px-3\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Todo list</h4>\n\t\t\t\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"add-items d-flex\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control todo-list-input\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"What do you need to do today?\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.activeItem.title}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"add btn btn-primary font-weight-bold todo-list-add-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"add\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t<div className=\"list-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<ul className=\"d-flex flex-column-reverse todo-list\">\n\t\t\t\t\t\t\t\t\t\t\t{tasks.map(function(task, index) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => self.strikeUnstriketask(task)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ flex: 8 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-check\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{task.completed == false ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{task.title} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strike>{task.title} </strike>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => self.startEdit(task)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-dark\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => self.deleteItem(task)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ padding: '10px 15px 10px 15px' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-dark\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-remove\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}